// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Snapshot test 1`] = `
{
  "Outputs": {
    "AuroraBastionHostBastionHostId41E0EBC0": {
      "Description": "Instance ID of the bastion host. Use this to connect via SSM Session Manager",
      "Value": {
        "Ref": "AuroraBastionHostC24C6193",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "GrafanaPdcAgentGcloudHostedGrafanaIdParameter24A27F08": {
      "Default": "/grafana/gcloud-hosted-grafana-id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "GrafanaPdcAgentPdcAgentClusterParameter9D368283": {
      "Default": "/grafana/pdc-agent-cluster",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "GrafanaPdcAgentPdcAgentTokenParameter5BFE94C5": {
      "Default": "/grafana/pdc-agent-token",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61arm64C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-arm64",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
    },
    "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amikernel510hvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-kernel-5.10-hvm-x86_64-gp2",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
    },
  },
  "Resources": {
    "Aurora3FE0D001": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "CopyTagsToSnapshot": true,
        "DBClusterParameterGroupName": {
          "Ref": "AuroraAuroraauroraparametersgroupAC543997",
        },
        "DBSubnetGroupName": {
          "Ref": "AuroraSubnets580C9E00",
        },
        "DatabaseName": "mydb",
        "Engine": "aurora-mysql",
        "EngineVersion": "8.0.mysql_aurora.3.06.0",
        "MasterUserPassword": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "TargetAuroraSecret2DEF1BBF3fdaad7efa858a3daf9490cf0a702aeb",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": "admin",
        "PreferredMaintenanceWindow": "Sat:17:00-Sat:17:30",
        "VpcSecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "AuroraSecurityGroup467E7067",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBCluster",
      "UpdateReplacePolicy": "Delete",
    },
    "AuroraAuroraauroraparametersgroupAC543997": {
      "Properties": {
        "Description": "Cluster parameter group for aurora-mysql8.0",
        "Family": "aurora-mysql8.0",
        "Parameters": {
          "character_set_client": "utf8mb4",
          "character_set_server": "utf8mb4",
          "server_audit_events": "CONNECT,QUERY,TABLE",
          "server_audit_logging": "1",
        },
      },
      "Type": "AWS::RDS::DBClusterParameterGroup",
    },
    "AuroraBastionHostC24C6193": {
      "DependsOn": [
        "AuroraBastionHostInstanceRoleDefaultPolicy0B0D2B8A",
        "AuroraBastionHostInstanceRoleEDA435D4",
      ],
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "IamInstanceProfile": {
          "Ref": "AuroraBastionHostInstanceProfileD80005D6",
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amikernel510hvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t3.nano",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "AuroraBastionHostInstanceSecurityGroup3B0F6505",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet67A4DBCB",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "BastionHost",
          },
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash",
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "AuroraBastionHostInstanceProfileD80005D6": {
      "Properties": {
        "Roles": [
          {
            "Ref": "AuroraBastionHostInstanceRoleEDA435D4",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "AuroraBastionHostInstanceRoleDefaultPolicy0B0D2B8A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ssmmessages:*",
                "ssm:UpdateInstanceInformation",
                "ec2messages:*",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AuroraBastionHostInstanceRoleDefaultPolicy0B0D2B8A",
        "Roles": [
          {
            "Ref": "AuroraBastionHostInstanceRoleEDA435D4",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AuroraBastionHostInstanceRoleEDA435D4": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "BastionHost",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AuroraBastionHostInstanceSecurityGroup3B0F6505": {
      "Properties": {
        "GroupDescription": "Target/Aurora/BastionHost/Resource/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BastionHost",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AuroraSecretAttachment3E825A9F": {
      "Properties": {
        "SecretId": {
          "Ref": "TargetAuroraSecret2DEF1BBF3fdaad7efa858a3daf9490cf0a702aeb",
        },
        "TargetId": {
          "Ref": "Aurora3FE0D001",
        },
        "TargetType": "AWS::RDS::DBCluster",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "AuroraSecurityGroup467E7067": {
      "Properties": {
        "GroupDescription": "RDS security group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AuroraSecurityGroupfromTargetAuroraBastionHostInstanceSecurityGroupC43FC1283306185532B5": {
      "Properties": {
        "Description": "from TargetAuroraBastionHostInstanceSecurityGroupC43FC128:3306",
        "FromPort": 3306,
        "GroupId": {
          "Fn::GetAtt": [
            "AuroraSecurityGroup467E7067",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "AuroraBastionHostInstanceSecurityGroup3B0F6505",
            "GroupId",
          ],
        },
        "ToPort": 3306,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "AuroraSecurityGroupfromTargetDataPutterFargateServiceSecurityGroup11D3FDAA330643589A59": {
      "Properties": {
        "Description": "from TargetDataPutterFargateServiceSecurityGroup11D3FDAA:3306",
        "FromPort": 3306,
        "GroupId": {
          "Fn::GetAtt": [
            "AuroraSecurityGroup467E7067",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "DataPutterFargateServiceSecurityGroup7A418CF0",
            "GroupId",
          ],
        },
        "ToPort": 3306,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "AuroraSecurityGroupfromTargetGrafanaPdcAgentFargateServiceSecurityGroup44C6C3C0330621DE5F8E": {
      "Properties": {
        "Description": "from TargetGrafanaPdcAgentFargateServiceSecurityGroup44C6C3C0:3306",
        "FromPort": 3306,
        "GroupId": {
          "Fn::GetAtt": [
            "AuroraSecurityGroup467E7067",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "GrafanaPdcAgentFargateServiceSecurityGroupAA311E92",
            "GroupId",
          ],
        },
        "ToPort": 3306,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "AuroraSubnets580C9E00": {
      "Properties": {
        "DBSubnetGroupDescription": "Subnets for Aurora database",
        "SubnetIds": [
          {
            "Ref": "VpcIsolatedSubnet1SubnetDC3C6AF8",
          },
          {
            "Ref": "VpcIsolatedSubnet2SubnetB479B99C",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "Aurorawriter398FC05B": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "VpcIsolatedSubnet1RouteTableAssociation0FC379C3",
        "VpcIsolatedSubnet2RouteTableAssociation8E8989F5",
      ],
      "Properties": {
        "DBClusterIdentifier": {
          "Ref": "Aurora3FE0D001",
        },
        "DBInstanceClass": "db.t3.medium",
        "Engine": "aurora-mysql",
        "PromotionTier": 0,
        "PubliclyAccessible": false,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "CognitoGrafanaAdminGroup384FCFDE": {
      "Properties": {
        "GroupName": "grafana-admin",
        "UserPoolId": {
          "Ref": "CognitoUserPool279BBD48",
        },
      },
      "Type": "AWS::Cognito::UserPoolGroup",
    },
    "CognitoGrafanaEditorGroup76E1F822": {
      "Properties": {
        "GroupName": "grafana-editor",
        "UserPoolId": {
          "Ref": "CognitoUserPool279BBD48",
        },
      },
      "Type": "AWS::Cognito::UserPoolGroup",
    },
    "CognitoUserPool279BBD48": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AccountRecoverySetting": {
          "RecoveryMechanisms": [
            {
              "Name": "verified_email",
              "Priority": 1,
            },
          ],
        },
        "AdminCreateUserConfig": {
          "AllowAdminCreateUserOnly": true,
        },
        "AutoVerifiedAttributes": [
          "email",
        ],
        "DeletionProtection": "INACTIVE",
        "DeviceConfiguration": {
          "ChallengeRequiredOnNewDevice": true,
          "DeviceOnlyRememberedOnUserPrompt": true,
        },
        "EmailConfiguration": {
          "EmailSendingAccount": "COGNITO_DEFAULT",
        },
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "Policies": {
          "PasswordPolicy": {
            "MinimumLength": 8,
            "RequireLowercase": false,
            "RequireNumbers": false,
            "RequireSymbols": false,
            "RequireUppercase": false,
            "TemporaryPasswordValidityDays": 7,
          },
        },
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "UsernameAttributes": [
          "email",
        ],
        "VerificationMessageTemplate": {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}",
        },
      },
      "Type": "AWS::Cognito::UserPool",
      "UpdateReplacePolicy": "Delete",
    },
    "CognitoUserPoolUserPoolClient1E6BF456": {
      "Properties": {
        "AccessTokenValidity": 60,
        "AllowedOAuthFlows": [
          "code",
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": [
          "openid",
          "email",
          "profile",
          "aws.cognito.signin.user.admin",
        ],
        "CallbackURLs": [
          "http://localhost:5173/",
        ],
        "ClientName": "test-prefixApplication",
        "ExplicitAuthFlows": [
          "ALLOW_USER_PASSWORD_AUTH",
          "ALLOW_ADMIN_USER_PASSWORD_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH",
        ],
        "GenerateSecret": false,
        "IdTokenValidity": 60,
        "LogoutURLs": [
          "http://localhost:5173/",
        ],
        "PreventUserExistenceErrors": "ENABLED",
        "RefreshTokenValidity": 1440,
        "SupportedIdentityProviders": [
          "COGNITO",
        ],
        "TokenValidityUnits": {
          "AccessToken": "minutes",
          "IdToken": "minutes",
          "RefreshToken": "minutes",
        },
        "UserPoolId": {
          "Ref": "CognitoUserPool279BBD48",
        },
      },
      "Type": "AWS::Cognito::UserPoolClient",
    },
    "CognitoUserPoolUserPoolClientGrafanaABD36960": {
      "Properties": {
        "AccessTokenValidity": 60,
        "AllowedOAuthFlows": [
          "code",
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": [
          "openid",
          "email",
          "profile",
          "aws.cognito.signin.user.admin",
        ],
        "CallbackURLs": [
          "http://localhost:3000/login/generic_oauth",
        ],
        "ClientName": "test-prefixGrafana",
        "ExplicitAuthFlows": [
          "ALLOW_USER_PASSWORD_AUTH",
          "ALLOW_ADMIN_USER_PASSWORD_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH",
        ],
        "GenerateSecret": true,
        "IdTokenValidity": 60,
        "LogoutURLs": [
          "http://localhost:3000/login",
        ],
        "PreventUserExistenceErrors": "ENABLED",
        "RefreshTokenValidity": 1440,
        "SupportedIdentityProviders": [
          "COGNITO",
        ],
        "TokenValidityUnits": {
          "AccessToken": "minutes",
          "IdToken": "minutes",
          "RefreshToken": "minutes",
        },
        "UserPoolId": {
          "Ref": "CognitoUserPool279BBD48",
        },
      },
      "Type": "AWS::Cognito::UserPoolClient",
    },
    "CognitoUserPoolUserPoolDomainC12FFA2B": {
      "Properties": {
        "Domain": "yamatatsu-grafana",
        "UserPoolId": {
          "Ref": "CognitoUserPool279BBD48",
        },
      },
      "Type": "AWS::Cognito::UserPoolDomain",
    },
    "DataPutterClusterDE29E8BC": {
      "Type": "AWS::ECS::Cluster",
    },
    "DataPutterFargateService8C8E18B2": {
      "DependsOn": [
        "DataPutterTaskDefinitionTaskRole40F2F92D",
      ],
      "Properties": {
        "Cluster": {
          "Ref": "DataPutterClusterDE29E8BC",
        },
        "DeploymentConfiguration": {
          "Alarms": {
            "AlarmNames": [],
            "Enable": false,
            "Rollback": false,
          },
          "DeploymentCircuitBreaker": {
            "Enable": true,
            "Rollback": false,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DeploymentController": {
          "Type": "ECS",
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "LaunchType": "FARGATE",
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "DataPutterFargateServiceSecurityGroup7A418CF0",
                  "GroupId",
                ],
              },
            ],
            "Subnets": [
              {
                "Ref": "VpcPrivateSubnet1Subnet67A4DBCB",
              },
              {
                "Ref": "VpcPrivateSubnet2SubnetC8EB537D",
              },
            ],
          },
        },
        "TaskDefinition": {
          "Ref": "DataPutterTaskDefinition563BA3AE",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "DataPutterFargateServiceSecurityGroup7A418CF0": {
      "DependsOn": [
        "DataPutterTaskDefinitionTaskRole40F2F92D",
      ],
      "Properties": {
        "GroupDescription": "Target/DataPutter/FargateService/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "DataPutterTaskDefinition563BA3AE": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "DependsOn": [
              {
                "Condition": "COMPLETE",
                "ContainerName": "DBMigration",
              },
            ],
            "Essential": true,
            "Image": {
              "Fn::Sub": "\${AWS::AccountId}.dkr.ecr.\${AWS::Region}.\${AWS::URLSuffix}/cdk-hnb659fds-container-assets-\${AWS::AccountId}-\${AWS::Region}:5b06692e4a1553d83f82719704a10599afb0da060c47c9e0a71f4751bc49e075",
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "DataPutterTaskDefinitionPlcFakeLogGroupB856CE4A",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "PlcFake",
              },
            },
            "Name": "PlcFake",
            "ReadonlyRootFilesystem": false,
            "Secrets": [
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "AuroraSecretAttachment3E825A9F",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_DBNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "AuroraSecretAttachment3E825A9F",
                      },
                      ":dbname::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "AuroraSecretAttachment3E825A9F",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "AuroraSecretAttachment3E825A9F",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "pnpm",
              "prisma",
              "migrate",
              "deploy",
            ],
            "Essential": false,
            "Image": {
              "Fn::Sub": "\${AWS::AccountId}.dkr.ecr.\${AWS::Region}.\${AWS::URLSuffix}/cdk-hnb659fds-container-assets-\${AWS::AccountId}-\${AWS::Region}:5b06692e4a1553d83f82719704a10599afb0da060c47c9e0a71f4751bc49e075",
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "DataPutterTaskDefinitionDBMigrationLogGroupB84EC738",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "DBMigration",
              },
            },
            "Name": "DBMigration",
            "ReadonlyRootFilesystem": true,
            "Secrets": [
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "AuroraSecretAttachment3E825A9F",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_DBNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "AuroraSecretAttachment3E825A9F",
                      },
                      ":dbname::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "AuroraSecretAttachment3E825A9F",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "AuroraSecretAttachment3E825A9F",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "DataPutterTaskDefinitionExecutionRoleCAB2779E",
            "Arn",
          ],
        },
        "Family": "TargetDataPutterTaskDefinition79B8282B",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "RuntimePlatform": {
          "CpuArchitecture": "ARM64",
        },
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "DataPutterTaskDefinitionTaskRole40F2F92D",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "DataPutterTaskDefinitionDBMigrationLogGroupB84EC738": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 90,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "DataPutterTaskDefinitionExecutionRoleCAB2779E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DataPutterTaskDefinitionExecutionRoleDefaultPolicy3B914050": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":repository/",
                    {
                      "Fn::Sub": "cdk-hnb659fds-container-assets-\${AWS::AccountId}-\${AWS::Region}",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "DataPutterTaskDefinitionPlcFakeLogGroupB856CE4A",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "AuroraSecretAttachment3E825A9F",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "DataPutterTaskDefinitionDBMigrationLogGroupB84EC738",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DataPutterTaskDefinitionExecutionRoleDefaultPolicy3B914050",
        "Roles": [
          {
            "Ref": "DataPutterTaskDefinitionExecutionRoleCAB2779E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DataPutterTaskDefinitionPlcFakeLogGroupB856CE4A": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 90,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "DataPutterTaskDefinitionTaskRole40F2F92D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "GrafanaPdcAgentCluster73F762A4": {
      "Type": "AWS::ECS::Cluster",
    },
    "GrafanaPdcAgentFargateService0798C719": {
      "DependsOn": [
        "GrafanaPdcAgentTaskDefinitionTaskRoleBEE79DE5",
      ],
      "Properties": {
        "Cluster": {
          "Ref": "GrafanaPdcAgentCluster73F762A4",
        },
        "DeploymentConfiguration": {
          "Alarms": {
            "AlarmNames": [],
            "Enable": false,
            "Rollback": false,
          },
          "DeploymentCircuitBreaker": {
            "Enable": true,
            "Rollback": false,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DeploymentController": {
          "Type": "ECS",
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "LaunchType": "FARGATE",
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "GrafanaPdcAgentFargateServiceSecurityGroupAA311E92",
                  "GroupId",
                ],
              },
            ],
            "Subnets": [
              {
                "Ref": "VpcPrivateSubnet1Subnet67A4DBCB",
              },
              {
                "Ref": "VpcPrivateSubnet2SubnetC8EB537D",
              },
            ],
          },
        },
        "TaskDefinition": {
          "Ref": "GrafanaPdcAgentTaskDefinition3CF01727",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "GrafanaPdcAgentFargateServiceSecurityGroupAA311E92": {
      "DependsOn": [
        "GrafanaPdcAgentTaskDefinitionTaskRoleBEE79DE5",
      ],
      "Properties": {
        "GroupDescription": "Target/GrafanaPdcAgent/FargateService/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "GrafanaPdcAgentTaskDefinition3CF01727": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "-token",
              {
                "Ref": "GrafanaPdcAgentPdcAgentTokenParameter5BFE94C5",
              },
              "-cluster",
              {
                "Ref": "GrafanaPdcAgentPdcAgentClusterParameter9D368283",
              },
              "-gcloud-hosted-grafana-id",
              {
                "Ref": "GrafanaPdcAgentGcloudHostedGrafanaIdParameter24A27F08",
              },
            ],
            "Essential": true,
            "Image": "grafana/pdc-agent:0.0.32",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "GrafanaPdcAgentTaskDefinitionPdcAgentLogGroup643F8816",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "PdcAgent",
              },
            },
            "Name": "PdcAgent",
            "ReadonlyRootFilesystem": false,
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "GrafanaPdcAgentTaskDefinitionExecutionRoleA9A98010",
            "Arn",
          ],
        },
        "Family": "TargetGrafanaPdcAgentTaskDefinition459802BB",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "RuntimePlatform": {
          "CpuArchitecture": "ARM64",
        },
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "GrafanaPdcAgentTaskDefinitionTaskRoleBEE79DE5",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "GrafanaPdcAgentTaskDefinitionExecutionRoleA9A98010": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "GrafanaPdcAgentTaskDefinitionExecutionRoleDefaultPolicy373A1E66": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "GrafanaPdcAgentTaskDefinitionPdcAgentLogGroup643F8816",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GrafanaPdcAgentTaskDefinitionExecutionRoleDefaultPolicy373A1E66",
        "Roles": [
          {
            "Ref": "GrafanaPdcAgentTaskDefinitionExecutionRoleA9A98010",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GrafanaPdcAgentTaskDefinitionPdcAgentLogGroup643F8816": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 90,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "GrafanaPdcAgentTaskDefinitionTaskRoleBEE79DE5": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "TargetAuroraSecret2DEF1BBF3fdaad7efa858a3daf9490cf0a702aeb": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              "Generated by the CDK for stack: ",
              {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@"\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{"username":"admin"}",
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "VpcC3027511": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcIGW488B0FEB": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcIsolatedSubnet1RouteTableAssociation0FC379C3": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcIsolatedSubnet1RouteTableF057227C",
        },
        "SubnetId": {
          "Ref": "VpcIsolatedSubnet1SubnetDC3C6AF8",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcIsolatedSubnet1RouteTableF057227C": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc/IsolatedSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcIsolatedSubnet1SubnetDC3C6AF8": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.4.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Isolated",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc/IsolatedSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcIsolatedSubnet2RouteTableAssociation8E8989F5": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcIsolatedSubnet2RouteTableBAB510EF",
        },
        "SubnetId": {
          "Ref": "VpcIsolatedSubnet2SubnetB479B99C",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcIsolatedSubnet2RouteTableBAB510EF": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc/IsolatedSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcIsolatedSubnet2SubnetB479B99C": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.5.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Isolated",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc/IsolatedSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcNatSecurityGroup810E8F8C": {
      "Properties": {
        "GroupDescription": "Security Group for NAT instances",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcNatSecurityGroupfromTargetAuroraBastionHostInstanceSecurityGroupC43FC128ALLTRAFFIC94591A74": {
      "Properties": {
        "Description": "from TargetAuroraBastionHostInstanceSecurityGroupC43FC128:ALL TRAFFIC",
        "GroupId": {
          "Fn::GetAtt": [
            "VpcNatSecurityGroup810E8F8C",
            "GroupId",
          ],
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "AuroraBastionHostInstanceSecurityGroup3B0F6505",
            "GroupId",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "VpcNatSecurityGroupfromTargetDataPutterFargateServiceSecurityGroup11D3FDAAALLTRAFFIC76266153": {
      "Properties": {
        "Description": "from TargetDataPutterFargateServiceSecurityGroup11D3FDAA:ALL TRAFFIC",
        "GroupId": {
          "Fn::GetAtt": [
            "VpcNatSecurityGroup810E8F8C",
            "GroupId",
          ],
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "DataPutterFargateServiceSecurityGroup7A418CF0",
            "GroupId",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "VpcNatSecurityGroupfromTargetGrafanaPdcAgentFargateServiceSecurityGroup44C6C3C0ALLTRAFFICB3AF1AC4": {
      "Properties": {
        "Description": "from TargetGrafanaPdcAgentFargateServiceSecurityGroup44C6C3C0:ALL TRAFFIC",
        "GroupId": {
          "Fn::GetAtt": [
            "VpcNatSecurityGroup810E8F8C",
            "GroupId",
          ],
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "GrafanaPdcAgentFargateServiceSecurityGroupAA311E92",
            "GroupId",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "VpcPrivateSubnet1DefaultRouteF704DE9F": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "InstanceId": {
          "Ref": "VpcPublicSubnet1NatInstanceABFD54A8",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTable901BAEEE",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet1RouteTable901BAEEE": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet1RouteTableAssociation2BC202CB": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTable901BAEEE",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet67A4DBCB",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet1Subnet67A4DBCB": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.2.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet2DefaultRoute5FAC9901": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "InstanceId": {
          "Ref": "VpcPublicSubnet2NatInstanceB36A9521",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTable1EA00C9D",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet2RouteTable1EA00C9D": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet2RouteTableAssociationFA51927B": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTable1EA00C9D",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet2SubnetC8EB537D",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet2SubnetC8EB537D": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.3.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet1DefaultRoute0F5C6C43": {
      "DependsOn": [
        "VpcVPCGW42EC8516",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGW488B0FEB",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable431DD755",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet1NatInstanceABFD54A8": {
      "DependsOn": [
        "VpcPublicSubnet1NatInstanceInstanceRoleE102367C",
      ],
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "IamInstanceProfile": {
          "Ref": "VpcPublicSubnet1NatInstanceInstanceProfile65B2A5BB",
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61arm64C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t4g.nano",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcNatSecurityGroup810E8F8C",
              "GroupId",
            ],
          },
        ],
        "SourceDestCheck": false,
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet8E8DEDC0",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc/PublicSubnet1/NatInstance",
          },
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash
yum install iptables-services -y
systemctl enable iptables
systemctl start iptables
echo "net.ipv4.ip_forward=1" > /etc/sysctl.d/custom-ip-forwarding.conf
sudo sysctl -p /etc/sysctl.d/custom-ip-forwarding.conf
sudo /sbin/iptables -t nat -A POSTROUTING -o $(route | awk '/^default/{print $NF}') -j MASQUERADE
sudo /sbin/iptables -F FORWARD
sudo service iptables save",
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "VpcPublicSubnet1NatInstanceInstanceProfile65B2A5BB": {
      "Properties": {
        "Roles": [
          {
            "Ref": "VpcPublicSubnet1NatInstanceInstanceRoleE102367C",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "VpcPublicSubnet1NatInstanceInstanceRoleE102367C": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc/PublicSubnet1/NatInstance",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "VpcPublicSubnet1RouteTable431DD755": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet1RouteTableAssociationBBCB7AA1": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable431DD755",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet8E8DEDC0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet1Subnet8E8DEDC0": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet2DefaultRouteD629179A": {
      "DependsOn": [
        "VpcVPCGW42EC8516",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGW488B0FEB",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable77FB35FC",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet2NatInstanceB36A9521": {
      "DependsOn": [
        "VpcPublicSubnet2NatInstanceInstanceRole65214B71",
      ],
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "IamInstanceProfile": {
          "Ref": "VpcPublicSubnet2NatInstanceInstanceProfileA3FF110C",
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61arm64C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t4g.nano",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcNatSecurityGroup810E8F8C",
              "GroupId",
            ],
          },
        ],
        "SourceDestCheck": false,
        "SubnetId": {
          "Ref": "VpcPublicSubnet2SubnetA811849C",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc/PublicSubnet2/NatInstance",
          },
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash
yum install iptables-services -y
systemctl enable iptables
systemctl start iptables
echo "net.ipv4.ip_forward=1" > /etc/sysctl.d/custom-ip-forwarding.conf
sudo sysctl -p /etc/sysctl.d/custom-ip-forwarding.conf
sudo /sbin/iptables -t nat -A POSTROUTING -o $(route | awk '/^default/{print $NF}') -j MASQUERADE
sudo /sbin/iptables -F FORWARD
sudo service iptables save",
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "VpcPublicSubnet2NatInstanceInstanceProfileA3FF110C": {
      "Properties": {
        "Roles": [
          {
            "Ref": "VpcPublicSubnet2NatInstanceInstanceRole65214B71",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "VpcPublicSubnet2NatInstanceInstanceRole65214B71": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc/PublicSubnet2/NatInstance",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "VpcPublicSubnet2RouteTable77FB35FC": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet2RouteTableAssociation3AFE92E6": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable77FB35FC",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2SubnetA811849C",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet2SubnetA811849C": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "Target/Vpc/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcVPCGW42EC8516": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "VpcIGW488B0FEB",
        },
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "VpcVpcS3EndpointForPrivate54C54F5D": {
      "Properties": {
        "RouteTableIds": [
          {
            "Ref": "VpcPrivateSubnet1RouteTable901BAEEE",
          },
          {
            "Ref": "VpcPrivateSubnet2RouteTable1EA00C9D",
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".s3",
            ],
          ],
        },
        "VpcEndpointType": "Gateway",
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
