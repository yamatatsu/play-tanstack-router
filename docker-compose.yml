services:

  browser-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: browser-app-dev
    ports:
      - 5173:5173
    env_file:
      - ./packages/browser-app/.env.local
    volumes:
      - ./packages/browser-app:/usr/src/app/packages/browser-app
      - /usr/src/app/packages/browser-app/node_modules

  server-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: server-app-dev
    ports:
      - 8000:8000
    environment:
      DB_HOST: db
      DB_DBNAME: mydb
      DB_USERNAME: my-username
      DB_PASSWORD: my-password
      CORS_ORIGIN: http://localhost:5173
    volumes:
      - ./packages/server-app:/usr/src/app/packages/server-app
      - /usr/src/app/packages/server-app/node_modules
    depends_on:
      db:
        condition: service_healthy
      prisma-deploy:
        condition: service_completed_successfully

  plc-fake:
    build:
      context: .
      dockerfile: Dockerfile
      target: plc-fake
    environment:
      DB_HOST: db
      DB_DBNAME: mydb
      DB_USERNAME: my-username
      DB_PASSWORD: my-password
    depends_on:
      db:
        condition: service_healthy
      prisma-deploy:
        condition: service_completed_successfully

  prisma-deploy:
    build:
      context: .
      dockerfile: Dockerfile
      target: plc-fake
    environment:
      DB_HOST: db
      DB_DBNAME: mydb
      DB_USERNAME: my-username
      DB_PASSWORD: my-password
    command: [pnpm, prisma, migrate, deploy]
    depends_on:
      db:
        condition: service_healthy

  grafana:
    image: grafana/grafana:11.1.0
    ports:
      - '3000:3000'
    volumes:
      - ./packages/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./packages/grafana/provisioning:/etc/grafana/provisioning
      - grafana-config-data:/var/lib/grafana
    environment:
      GF_AUTH_GENERIC_OAUTH_CLIENT_ID: ${AUTH_GENERIC_OAUTH_CLIENT_ID}
      GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: ${AUTH_GENERIC_OAUTH_CLIENT_SECRET}
      GF_AUTH_GENERIC_OAUTH_AUTH_URL: ${AUTH_GENERIC_OAUTH_USER_POOL_DOMAIN}/oauth2/authorize
      GF_AUTH_GENERIC_OAUTH_TOKEN_URL: ${AUTH_GENERIC_OAUTH_USER_POOL_DOMAIN}/oauth2/token
      GF_AUTH_GENERIC_OAUTH_API_URL: ${AUTH_GENERIC_OAUTH_USER_POOL_DOMAIN}/oauth2/userInfo
    depends_on:
      db:
        condition: service_healthy

  db:
    image: mysql:8.0
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: yes
      MYSQL_DATABASE: mydb
      MYSQL_USER: my-username
      MYSQL_PASSWORD: my-password
    ports: 
      - 3306:3306
    # volumes:
    #   - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 1s
      timeout: 1s
      retries: 10

volumes:
  mysql-data:
  grafana-config-data:
